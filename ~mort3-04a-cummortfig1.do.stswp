/*==============================================================================
FIGURE 1 like in JAMA PAPER - CUM MORT ALL CAUSES 

==============================================================================*/
local cod recur allcodexcrecur

/*
blood endocrine mental nervous circulation ///
respiratory digestive muscoskeletal genitourinary perinatal other external 
*/

local j = 0
local xtime 70

*-------------------------------------------------------------------------------
* CALCULATE EXPECTED OVERALL (ALLCAUES) - VERY SLOW!
*-------------------------------------------------------------------------------
use  "$temp/x-mort3-stset-allcauses"  , clear




stexpect conditional , ratevar(newrate) 		///
out($temp/x-mort3-expected-allcause , replace) 	///
method(2) at(5(1)`xtime') npoints(10)			


*-------------------------------------------------------------------------------
* STCOMPET PER COD
*-------------------------------------------------------------------------------
local i = 0
foreach x in `cod' {
	use  "$temp/x-mort3-prepforstset" , clear //read the original file
	
	//other cod to 2 as competing risk
	recode `x' (0=2) if allcauses==1
	
	//stset on each cause of death
	stset dox, fail(`x'==1) id(indexno) origin(dob) entry(doe) scale(365.25)
	assert _st==1
	stcompet cuminc = ci , compet1(2) //put other causes as competinng
	gen ci_`x' = cuminc*100 if _d==1
	keep if _d==1
	keep ci_`x' _t
	sort _t
	
	tempfile `x'
	save ``x''
	}


*-------------------------------------------------------------------------------
* APPEND ALL FILES 
*-------------------------------------------------------------------------------
use "$temp/x-mort3-expected-allcause" , clear	
append using  `recur' `allcodexcrecur'
gen expected = (1-conditional)*100



*-------------------------------------------------------------------------------
* FIGURE 
*-------------------------------------------------------------------------------
#delimit ;

twoway

/* CAUSES OF DEATH*/
(line ci_recur ci_allcodexrecur _t if (_t>=5 & _t<= 70) 
, sort connect(J J J J) clp(solid solid solid solid) 
clw(med med med med) clc(black blue red green))
	
/* EXPECTED DEATHS*/
(lowess expected t_exp if (t_exp>=5 & t_exp<= 70), sort bw(0.3) clp(l) clc(cyan) clp(shortdash))	
	
	/* OPTIONS*/
	,
	
	/*LABELS*/
	xtitle("Attained age, years" ,size(small))
	ytitle("Cumulative mortality, %" , size(small))
	ylabel(0(1)16, angle(0)) xlabel(5(5)70)
	
	/*LEGEND*/
	legend(on) 
	legend(order(1 "recurrence" 2 "all causes except recurrence" 3 "expected mortality")
	ring(0) position(11) size(small) rowgap(0.1) cols(1))

;
#delimit cr
